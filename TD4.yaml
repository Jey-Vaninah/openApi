openapi: 3.0.3
info:
  title: STD23042 - TD4
  version: '1.0.4'
servers:
  - url: https://localhost.std23042.com
paths:
  /customers:
    get:
      parameters:
        - in: query
          name: page
          schema:
            type: integer
          required: true
        - in: query
          name: pageSize
          schema:
            type: integer
          required: true
      responses:
        200:
          description: List of customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
    post:
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateCustomer'
        required: true
      responses:
        200:
          description: List of created customers
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Customer'
  /customers/{customerId}/orders:
    get:
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
      responses:
        200:
          description: List of orders for a specific customer
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
    post:
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrder'
        required: true
      responses:
        200:
          description: Created order for a specific customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    put:
      parameters:
        - in: path
          name: customerId
          schema:
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Order'
        required: true
      responses:
        200:
          description: Updated order for a specific customer
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
components:
  schemas:
    Customer:
      allOf:
        - $ref: '#/components/schemas/CustomerIdentifier'
        - $ref: '#/components/schemas/CreateCustomer'
    CustomerIdentifier:
      type: object
      properties:
        id:
          type: string
    CreateCustomer:
      type: object
      properties:
        name:
          type: string
        age:
          type: integer
    Meal:
      allOf:
        - $ref: '#/components/schemas/MealIdentifier'
        - $ref: '#/components/schemas/CreateMeal'
    MealIdentifier:
      type: object
      properties:
        id:
          type: string
    CreateMeal:
      type: object
      properties:
        name:
          type: string
        price:
          type: number
          format: decimal
    Order:
      type: object
      properties:
        id:
          type: string
        reference:
          type: string
        meals:
          type: array
          items:
            type: object
            properties:
              meal:
                $ref: '#/components/schemas/Meal'
              quantity:
                type: integer
        orderDatetime:
          type: string
          format: date-time
    CreateOrder:
      type: object
      properties:
        reference:
          type: string
        meals:
          type: array
          items:
            type: object
            properties:
              mealId:
                type: string
              quantity:
                type: integer
